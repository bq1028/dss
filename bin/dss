#!/usr/bin/env node

const fs = require('fs')
const path = require('path')
const glob = require('glob')
const dss = require('..')

const read = filename => fs.readFileSync(filename, 'utf-8')

const [globPattern, dist, bundleFilename] = process.argv.slice(2)

const jsSheets = glob.sync(globPattern).map(filename => {
  const css = read(filename)
  return dss(css, { filename, addReadableClass: process.env.NODE_ENV !== 'production' })
})

Promise.all(jsSheets).then(results => {
  results.forEach((compiled, i) => {
    fs.writeFileSync(
      path.resolve(path.join(dist, path.basename(jsSheets[i])+'.json')),
      JSON.stringify(compiled, null, 2)
    )
  })

  fs.writeFileSync(path.resolve(path.join(dist, bundleFilename || 'index.css')), dss.css())
}).catch(e => {
  console.error(e)
  process.exit(1)
})
